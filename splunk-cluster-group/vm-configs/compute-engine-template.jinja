{#
var defining part
==========================================================
#}
{% set  NETWORK_NAME = "splunk-sub" %}
{% set  INSTANCE_NAME ="splunk" %}
{% set  SPLUNK_GROUP ="splunk-group" %}
{% set  SPLUNK_BASE_NAME ="splunk-peer" %}
{% set  SPLUNK_ZONE ="europe-west3-b" %}
{% set  SPLUNK_MachineType ="n1-standard-1" %}
{% set  Splunk_temp = "splunk-peer-it"%}
{% set  SPLUNK_SH ="splunk-sh" %}
{% set  CLUSTER_SIZE ="4" %}
{% set  BASE_IMAGE ="https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts" %}

{#
imports:
- path: vm-configs/vm-splunk-sh.jinja
- path: vm-configs/vm-splunk-bastion.jinja
- path: vm-configs/splunk-template.jinja
- path: start-up-scripts/splunk-sh.sh
  name: splunk-sh.sh
- path: start-up-scripts/bastion.sh 
  name: bastion.sh 
- path: start-up-scripts/splunk-peer-temp.sh
  name: splunk-peer-temp.sh
    properties:
    network: {{ NETWORK_NAME }}
    machineType: {{ SPLUNK_MachineType }}
    masternode : {{ SPLUNK_SH }}
    password: $(ref.generated-password.password)
    metadata-from-file:
      startup-script: splunk-peer-temp.sh
#}

{#
generator config
==========================================================
#}
resources:
- name: generated-password
  type: vm-configs/password.py
  properties:
    length: 8
    includeSymbols: true

{#
Splunk Search head creation 
==========================================================
#}
- name: {{ SPLUNK_SH }}
  type: vm-configs/vm-splunk-sh.jinja
  properties:
    machineType: {{ SPLUNK_MachineType }}
    zone: {{ SPLUNK_ZONE }}
    network: {{ NETWORK_NAME }}
    image : {{ BASE_IMAGE }}
    masternode : {{ SPLUNK_SH }}
    password: $(ref.generated-password.password)

{#
Bastion Proxy pass creation 
==========================================================
#}
- name: {{ SPLUNK_SH }}-bastion
  type: vm-configs/vm-splunk-bastion.jinja
  properties:
    machineType: {{ SPLUNK_MachineType }}
    zone: {{ SPLUNK_ZONE }}
    network: {{ NETWORK_NAME }}
    masternode : {{ SPLUNK_SH }}
    image : {{ BASE_IMAGE }}

{#
Teamplate for group creation 
==========================================================
#}
- name: {{ Splunk_temp }}
  type: vm-configs/splunk-template.jinja
  properties:
    network: {{ NETWORK_NAME }}
    machineType: {{ SPLUNK_MachineType }}
    masternode : {{ SPLUNK_SH }}
    image : {{ BASE_IMAGE }}
    password: $(ref.generated-password.password)

{#
Group creation with zise and template link
==========================================================
#}
- name: {{ SPLUNK_GROUP }}
  type: vm-configs/autoscaled_group.jinja
  properties:
    zone : {{ SPLUNK_ZONE }}
    size : {{ CLUSTER_SIZE }}
    baseInstanceName : {{ SPLUNK_BASE_NAME }}
    instanceTemplate : $(ref.{{ Splunk_temp }}.selfLink)

{#
Autoscaler group creation with max size
==========================================================
#}
- name: {{ SPLUNK_BASE_NAME }}-as
  type: vm-configs/autoscaler.jinja
  properties:
    zone: {{ SPLUNK_ZONE }}
    target: $(ref.{{ SPLUNK_GROUP }}.selfLink)
    minSize : {{ CLUSTER_SIZE }}
    maxSize : {{ CLUSTER_SIZE }}

{#
Networking part
==========================================================
#}
- name: {{ NETWORK_NAME }}
  type: network-configs/network-template.jinja

- name: {{ NETWORK_NAME }}-firewall
  type: network-configs/firewall-template.jinja
  properties:
    network: {{ NETWORK_NAME }}